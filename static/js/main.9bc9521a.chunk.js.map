{"version":3,"sources":["Components/Notification/Notification.module.css","Components/AddSection/AddSection.module.css","Components/OutputSection/OutputSection.module.css","Components/Animations/slide.module.css","Components/Animations/title.module.css","Components/Animations/pop.module.css","Components/Animations/alert.module.css","Components/AddSection/index.jsx","Components/OutputSection/index.jsx","Components/Filter/index.jsx","Components/Notification/index.jsx","App.js","index.js"],"names":["module","exports","AddSection","props","name","phone","onSendData","this","className","s","container","type","placeholder","ref","c","addBtn","onClick","value","Component","OutputSection","data","onDelete","items","Object","values","TransitionGroup","component","map","item","CSSTransition","timeout","classNames","slideTransition","unmountOnExit","number","style","deleteBtn","id","Filter","onFilterUpdate","onInput","Notification","message","errorMassage","INITIAL_STATE","isVisible","App","state","contacts","filter","updateContactsList","contact","toLowerCase","includes","handleDelete","setState","prevState","setMessage","setTimeout","handleFilterUpdate","handleButtonClick","nameValue","numberValue","contactState","find","newContact","uuidv4","loadedContacts","JSON","parse","localStorage","getItem","currentContacts","setItem","stringify","in","titleTransition","appear","notificationTransition","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bc9521a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMassage\":\"Notification_errorMassage__BZv1f\",\"enter\":\"Notification_enter__2U4Cy\",\"enterActive\":\"Notification_enterActive__3gWAG\",\"exit\":\"Notification_exit__1BFXh\",\"exitActive\":\"Notification_exitActive__heHsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddSection_container__2XlOS\",\"addBtn\":\"AddSection_addBtn__2HRaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"OutputSection_deleteBtn__1oZwB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__15QI2\",\"enterActive\":\"slide_enterActive__39V_2\",\"exit\":\"slide_exit__FLwG0\",\"exitActive\":\"slide_exitActive__P1iGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"title_appear__1aSNN\",\"appearActive\":\"title_appearActive__3iOPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1pYMc\",\"enterActive\":\"pop_enterActive__1eI7P\",\"exit\":\"pop_exit__3ORIP\",\"exitActive\":\"pop_exitActive__RwEo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__2fl5P\",\"enterActive\":\"alert_enterActive__2aO0W\",\"exit\":\"alert_exit__2jduI\",\"exitActive\":\"alert_exitActive__2De2l\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './AddSection.module.css';\r\n\r\n\r\nclass AddSection extends Component {\r\n\r\n    static propTypes = {\r\n        onSendData: PropTypes.func.isRequired,\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.name = '';\r\n        this.phone = '';\r\n    }\r\n\r\n    render() {\r\n      const {onSendData } = this.props;\r\n  \r\n      return (\r\n        <div className={s.container}>\r\n            <p>Name</p>\r\n            <input type=\"text\" placeholder=\"Enter contact name\" ref={(c) => this.name = c}/>\r\n            <p>Number</p>\r\n            <input type=\"text\" placeholder=\"Enter phone number\" ref={(c) => this.phone = c}/>\r\n            <button className={s.addBtn} onClick={() => {\r\n                onSendData(this.name.value, this.phone.value);\r\n                this.name.value=\"\";\r\n                this.phone.value=\"\";\r\n                }}>Add contact</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default AddSection;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './OutputSection.module.css';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport slideTransition from '../Animations/slide.module.css';\r\n\r\nclass OutputSection extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onDelete: PropTypes.func.isRequired \r\n  };\r\n\r\n  render() {\r\n    const {data, onDelete} = this.props;\r\n    const items = Object.values(data);\r\n    return (\r\n      <TransitionGroup component=\"ul\">\r\n          {items.map(item => (\r\n            <CSSTransition key={item.id} timeout={250} classNames={slideTransition} unmountOnExit>\r\n          <li \r\n            key={item.id}\r\n    \r\n          >\r\n            {item.name} : {item.number}\r\n            <button className={style.deleteBtn} onClick={() => {\r\n                onDelete(item.id);\r\n                }}>Delete</button>\r\n          </li>\r\n          </CSSTransition>\r\n        ))}\r\n       </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OutputSection;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Filter extends Component {\r\n\r\n    static propTypes = {\r\n        onFilterUpdate: PropTypes.func.isRequired,\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.value = '';\r\n    }\r\n\r\n    render() {\r\n      const {onFilterUpdate } = this.props;\r\n  \r\n      return (\r\n        <div>\r\n            <p>Find contacts by name</p>\r\n            <input type=\"text\" placeholder=\"Enter contact name\" ref={(c) => this.value = c} onInput={() => {\r\n                onFilterUpdate(this.value.value);\r\n                }}/>\r\n \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nimport React from \"react\";\r\n\r\n\r\n\r\n\r\nconst Notification = ({ message }) => (\r\n    <div className={s.errorMassage}>\r\n        {message}\r\n    </div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;","import { Component } from 'react';\r\nimport Section from './Components/Section';\r\nimport AddSection from './Components/AddSection';\r\nimport OutputSection from './Components/OutputSection';\r\nimport Filter from './Components/Filter';\r\nimport Notification from './Components/Notification';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './index.css';\r\nimport errorClass from './Components/Notification/Notification.module.css';\r\nimport titleTransition from './Components/Animations/title.module.css';\r\nimport popTransition from './Components/Animations/pop.module.css';\r\nimport notificationTransition from './Components/Animations/alert.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  isVisible: false,\r\n  message: \"\",\r\n};\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n        ...INITIAL_STATE,\r\n      };     \r\n\r\n      componentDidMount() {\r\n        const loadedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n        if (loadedContacts) this.setState({ contacts: loadedContacts });\r\n      }\r\n    \r\n      componentDidUpdate(prevState) {\r\n        const { contacts: currentContacts } = this.state;\r\n        const { contacts: prevContacts } = prevState;\r\n        if (currentContacts !== prevContacts) {\r\n          localStorage.setItem(\"contacts\", JSON.stringify(currentContacts));\r\n        }\r\n      }\r\n\r\n    updateContactsList = () => {\r\n        const {contacts, filter} = this.state;\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n    }\r\n\r\n    handleDelete = value => {\r\n        this.setState(prevState => {\r\n            return {\r\n              contacts: prevState.contacts.filter(({id}) => id !== value)\r\n            }\r\n          }) \r\n    }\r\n\r\n    setMessage = (message) => {\r\n      this.setState({ isVisible: true, message: message });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          ...INITIAL_STATE,\r\n        });\r\n      }, 1500);\r\n    };\r\n\r\n    handleFilterUpdate = value => {\r\n        this.setState({ \r\n            filter: value\r\n          });\r\n          this.updateContactsList();   \r\n    }\r\n\r\n    handleButtonClick = (nameValue, numberValue) => {\r\n\r\n        const contactState = this.state.contacts.find(contact => contact.name.toLowerCase() === nameValue.toLowerCase());\r\n\r\n        if(contactState){\r\n          this.setState({\r\n            isVisible: true,\r\n            message: \"Contact already exists!\",\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              ...INITIAL_STATE,\r\n            });\r\n          }, 1500);\r\n        }\r\n\r\n      //   contactState && this.setState({ errorMessage: 'Is already in contacts.' },  setTimeout(() => {\r\n      //     this.setState({ errorMessage: '' });\r\n      //   }, 1500));\r\n      //  ;\r\n        if (!contactState && nameValue && numberValue) {\r\n            const newContact = {\r\n                id: uuidv4(),\r\n                name: nameValue,\r\n                number: numberValue,\r\n              };\r\n              this.setState(prevState => {\r\n                return {\r\n                  contacts: [...prevState.contacts, newContact],\r\n                }\r\n              });\r\n          \r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              <CSSTransition in timeout={500} classNames={titleTransition} appear>\r\n          <h1 className=\"title\">Phonebook</h1>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={this.state.isVisible}\r\n          timeout={250}\r\n          classNames={notificationTransition}\r\n          unmountOnExit\r\n        >\r\n          <Notification message={this.state.message} />\r\n        </CSSTransition>\r\n                    <AddSection onSendData={this.handleButtonClick}/>              \r\n                    {this.state.contacts.length>0 && <h2>Contacts</h2>}\r\n                    <CSSTransition in={this.state.contacts.length > 1}\r\n          timeout={250}\r\n          classNames={popTransition}\r\n          unmountOnExit>\r\n          <Filter onFilterUpdate={this.handleFilterUpdate}/>\r\n        </CSSTransition>\r\n                   \r\n                   <OutputSection data={this.updateContactsList()} onDelete={this.handleDelete}/>\r\n\r\n                  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n      \r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App/>\n  // </React.StrictMode>,\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}